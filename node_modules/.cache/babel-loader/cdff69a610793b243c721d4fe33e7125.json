{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\covid-project\\\\covid-react\\\\src\\\\components\\\\covid\\\\CovidChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment-timezone\";\nconst divStyle = {\n  position: \"relative\",\n  width: \"100%\",\n  marginTop: \"30px\"\n};\n\nconst CovidLineChart = ({\n  covidDetails\n}) => {\n  const currentYear = moment().tz(\"Asia/Tokyo\").format(\"YYYY\");\n  const currentMonth = moment().tz(\"Asia/Tokyo\").format(\"MMMM\");\n  const currentMonthL = moment().tz(\"Asia/Tokyo\").format(\"L\");\n  const {\n    Latest: latest\n  } = covidDetails;\n  const positiveArray = [];\n  const deathArray = [];\n  const recoveriesArray = [];\n  const dateArray = [];\n\n  for (let latests of latest) {\n    positiveArray.push(latests.covid_positive);\n    deathArray.push(latests.covid_death);\n    recoveriesArray.push(latests.covid_recovered);\n    stringMonthYear(latests.covid_date) === stringMonthYear(currentMonthL) && dateArray.push(latests.covid_date);\n  }\n\n  console.log(dateArray);\n  const graphDetails = {\n    labels: getDays(currentMonth, currentYear),\n    datasets: [{\n      label: \"Positives\",\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"#f2f2f2\",\n      borderColor: \"#FF8C00\",\n      borderWidth: 1,\n      data: positiveArray\n    }, {\n      label: \"Deaths\",\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"#000000\",\n      borderColor: \"#B22222\",\n      borderWidth: 1,\n      data: deathArray\n    }, {\n      label: \"Recoveries\",\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"#000000\",\n      borderColor: \"#006400\",\n      borderWidth: 1,\n      data: recoveriesArray\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: graphDetails,\n    options: {\n      title: {\n        display: true,\n        text: `Covid Case Graph of ${currentMonth}`,\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: \"top\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst stringMonthYear = date => {\n  const splitDate = date.split(\"/\");\n  splitDate.splice(1, 1);\n  return splitDate.join(\"\");\n};\n\nconst getDays = (month, year) => {\n  const dateArray = [];\n  const monthYear = moment(year + \"-\" + month, \"YYYY-MMM\");\n\n  for (const end = moment(monthYear).add(1, \"month\"); monthYear.isBefore(end); monthYear.add(1, \"day\")) {\n    dateArray.push(monthYear.format(\"D-ddd\"));\n  }\n\n  return dateArray;\n};\n\nexport default CovidLineChart;","map":{"version":3,"sources":["D:/Projects/covid-project/covid-react/src/components/covid/CovidChart.js"],"names":["React","Line","moment","divStyle","position","width","marginTop","CovidLineChart","covidDetails","currentYear","tz","format","currentMonth","currentMonthL","Latest","latest","positiveArray","deathArray","recoveriesArray","dateArray","latests","push","covid_positive","covid_death","covid_recovered","stringMonthYear","covid_date","console","log","graphDetails","labels","getDays","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","title","display","text","fontSize","legend","date","splitDate","split","splice","join","month","year","monthYear","end","add","isBefore"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst divStyle = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  marginTop: \"30px\",\r\n};\r\n\r\nconst CovidLineChart = ({ covidDetails }) => {\r\n  const currentYear = moment().tz(\"Asia/Tokyo\").format(\"YYYY\");\r\n  const currentMonth = moment().tz(\"Asia/Tokyo\").format(\"MMMM\");\r\n  const currentMonthL = moment().tz(\"Asia/Tokyo\").format(\"L\");\r\n\r\n  const { Latest: latest } = covidDetails;\r\n\r\n  const positiveArray = [];\r\n  const deathArray = [];\r\n  const recoveriesArray = [];\r\n  const dateArray = [];\r\n\r\n  for (let latests of latest) {\r\n    positiveArray.push(latests.covid_positive);\r\n    deathArray.push(latests.covid_death);\r\n    recoveriesArray.push(latests.covid_recovered);\r\n    stringMonthYear(latests.covid_date) === stringMonthYear(currentMonthL) &&\r\n      dateArray.push(latests.covid_date);\r\n  }\r\n\r\n  console.log(dateArray);\r\n\r\n  const graphDetails = {\r\n    labels: getDays(currentMonth, currentYear),\r\n    datasets: [\r\n      {\r\n        label: \"Positives\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"#f2f2f2\",\r\n        borderColor: \"#FF8C00\",\r\n        borderWidth: 1,\r\n        data: positiveArray,\r\n      },\r\n      {\r\n        label: \"Deaths\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"#000000\",\r\n        borderColor: \"#B22222\",\r\n        borderWidth: 1,\r\n        data: deathArray,\r\n      },\r\n      {\r\n        label: \"Recoveries\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"#000000\",\r\n        borderColor: \"#006400\",\r\n        borderWidth: 1,\r\n        data: recoveriesArray,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div style={divStyle}>\r\n      <Line\r\n        data={graphDetails}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: `Covid Case Graph of ${currentMonth}`,\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"top\",\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst stringMonthYear = (date) => {\r\n  const splitDate = date.split(\"/\");\r\n  splitDate.splice(1, 1);\r\n  return splitDate.join(\"\");\r\n};\r\n\r\nconst getDays = (month, year) => {\r\n  const dateArray = [];\r\n  const monthYear = moment(year + \"-\" + month, \"YYYY-MMM\");\r\n  for (\r\n    const end = moment(monthYear).add(1, \"month\");\r\n    monthYear.isBefore(end);\r\n    monthYear.add(1, \"day\")\r\n  ) {\r\n    dateArray.push(monthYear.format(\"D-ddd\"));\r\n  }\r\n  return dateArray;\r\n};\r\n\r\nexport default CovidLineChart;\r\n"]},"metadata":{},"sourceType":"module"}